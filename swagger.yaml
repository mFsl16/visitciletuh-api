swagger: '2.0'
info:
  description: API ini dibuat menggunakan Springboot
  version: '1.0'
  title: Visit Ciletuh API Documentation
  termsOfService: Term Of Service
  contact:
    name: Muhammad Faisal
    url: 'https://github.com/mFsl16'
    email: cd.muhammadfaisal@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
host: 'localhost:8080'
basePath: /
tags:
  - name: about-controller
    description: About Controller
  - name: categories-controller
    description: Categories Controller
  - name: place-controller
    description: Place Controller
  - name: welcome
    description: Welcome
paths:
  /api/about:
    get:
      tags:
        - about-controller
      summary: getAll
      operationId: getAllUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Iterable«AboutEntitt»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - about-controller
      summary: addData
      operationId: addDataUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: aboutEntitt
          description: aboutEntitt
          required: true
          schema:
            $ref: '#/definitions/AboutEntitt'
        - name: 'allErrors[0].arguments'
          in: query
          required: false
          type: array
          items:
            type: object
          collectionFormat: multi
        - name: 'allErrors[0].code'
          in: query
          required: false
          type: string
        - name: 'allErrors[0].codes'
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: 'allErrors[0].defaultMessage'
          in: query
          required: false
          type: string
        - name: 'allErrors[0].objectName'
          in: query
          required: false
          type: string
        - name: errorCount
          in: query
          required: false
          type: integer
          format: int32
        - name: fieldError.arguments
          in: query
          required: false
          type: array
          items:
            type: object
          collectionFormat: multi
        - name: fieldError.bindingFailure
          in: query
          required: false
          type: boolean
        - name: fieldError.code
          in: query
          required: false
          type: string
        - name: fieldError.codes
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: fieldError.defaultMessage
          in: query
          required: false
          type: string
        - name: fieldError.field
          in: query
          required: false
          type: string
        - name: fieldError.objectName
          in: query
          required: false
          type: string
        - name: fieldError.rejectedValue
          in: query
          required: false
          type: object
        - name: fieldErrorCount
          in: query
          required: false
          type: integer
          format: int32
        - name: 'fieldErrors[0].arguments'
          in: query
          required: false
          type: array
          items:
            type: object
          collectionFormat: multi
        - name: 'fieldErrors[0].bindingFailure'
          in: query
          required: false
          type: boolean
        - name: 'fieldErrors[0].code'
          in: query
          required: false
          type: string
        - name: 'fieldErrors[0].codes'
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: 'fieldErrors[0].defaultMessage'
          in: query
          required: false
          type: string
        - name: 'fieldErrors[0].field'
          in: query
          required: false
          type: string
        - name: 'fieldErrors[0].objectName'
          in: query
          required: false
          type: string
        - name: 'fieldErrors[0].rejectedValue'
          in: query
          required: false
          type: object
        - name: globalError.arguments
          in: query
          required: false
          type: array
          items:
            type: object
          collectionFormat: multi
        - name: globalError.code
          in: query
          required: false
          type: string
        - name: globalError.codes
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: globalError.defaultMessage
          in: query
          required: false
          type: string
        - name: globalError.objectName
          in: query
          required: false
          type: string
        - name: globalErrorCount
          in: query
          required: false
          type: integer
          format: int32
        - name: 'globalErrors[0].arguments'
          in: query
          required: false
          type: array
          items:
            type: object
          collectionFormat: multi
        - name: 'globalErrors[0].code'
          in: query
          required: false
          type: string
        - name: 'globalErrors[0].codes'
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: 'globalErrors[0].defaultMessage'
          in: query
          required: false
          type: string
        - name: 'globalErrors[0].objectName'
          in: query
          required: false
          type: string
        - name: nestedPath
          in: query
          required: false
          type: string
        - name: objectName
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseData«AboutEntitt»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - about-controller
      summary: updateData
      operationId: updateDataUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: aboutEntitt
          description: aboutEntitt
          required: true
          schema:
            $ref: '#/definitions/AboutEntitt'
        - name: 'allErrors[0].arguments'
          in: query
          required: false
          type: array
          items:
            type: object
          collectionFormat: multi
        - name: 'allErrors[0].code'
          in: query
          required: false
          type: string
        - name: 'allErrors[0].codes'
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: 'allErrors[0].defaultMessage'
          in: query
          required: false
          type: string
        - name: 'allErrors[0].objectName'
          in: query
          required: false
          type: string
        - name: errorCount
          in: query
          required: false
          type: integer
          format: int32
        - name: fieldError.arguments
          in: query
          required: false
          type: array
          items:
            type: object
          collectionFormat: multi
        - name: fieldError.bindingFailure
          in: query
          required: false
          type: boolean
        - name: fieldError.code
          in: query
          required: false
          type: string
        - name: fieldError.codes
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: fieldError.defaultMessage
          in: query
          required: false
          type: string
        - name: fieldError.field
          in: query
          required: false
          type: string
        - name: fieldError.objectName
          in: query
          required: false
          type: string
        - name: fieldError.rejectedValue
          in: query
          required: false
          type: object
        - name: fieldErrorCount
          in: query
          required: false
          type: integer
          format: int32
        - name: 'fieldErrors[0].arguments'
          in: query
          required: false
          type: array
          items:
            type: object
          collectionFormat: multi
        - name: 'fieldErrors[0].bindingFailure'
          in: query
          required: false
          type: boolean
        - name: 'fieldErrors[0].code'
          in: query
          required: false
          type: string
        - name: 'fieldErrors[0].codes'
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: 'fieldErrors[0].defaultMessage'
          in: query
          required: false
          type: string
        - name: 'fieldErrors[0].field'
          in: query
          required: false
          type: string
        - name: 'fieldErrors[0].objectName'
          in: query
          required: false
          type: string
        - name: 'fieldErrors[0].rejectedValue'
          in: query
          required: false
          type: object
        - name: globalError.arguments
          in: query
          required: false
          type: array
          items:
            type: object
          collectionFormat: multi
        - name: globalError.code
          in: query
          required: false
          type: string
        - name: globalError.codes
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: globalError.defaultMessage
          in: query
          required: false
          type: string
        - name: globalError.objectName
          in: query
          required: false
          type: string
        - name: globalErrorCount
          in: query
          required: false
          type: integer
          format: int32
        - name: 'globalErrors[0].arguments'
          in: query
          required: false
          type: array
          items:
            type: object
          collectionFormat: multi
        - name: 'globalErrors[0].code'
          in: query
          required: false
          type: string
        - name: 'globalErrors[0].codes'
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: 'globalErrors[0].defaultMessage'
          in: query
          required: false
          type: string
        - name: 'globalErrors[0].objectName'
          in: query
          required: false
          type: string
        - name: nestedPath
          in: query
          required: false
          type: string
        - name: objectName
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseData«AboutEntitt»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/about/{id}':
    get:
      tags:
        - about-controller
      summary: getOne
      operationId: getOneUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AboutEntitt'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - about-controller
      summary: delete
      operationId: deleteUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/categories:
    get:
      tags:
        - categories-controller
      summary: getAll
      operationId: getAllUsingGET_1
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseData«Iterable«Categories»»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - categories-controller
      summary: add
      operationId: addUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: 'allErrors[0].arguments'
          in: query
          required: false
          type: array
          items:
            type: object
          collectionFormat: multi
        - name: 'allErrors[0].code'
          in: query
          required: false
          type: string
        - name: 'allErrors[0].codes'
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: 'allErrors[0].defaultMessage'
          in: query
          required: false
          type: string
        - name: 'allErrors[0].objectName'
          in: query
          required: false
          type: string
        - in: body
          name: categories
          description: categories
          required: true
          schema:
            $ref: '#/definitions/Categories'
        - name: errorCount
          in: query
          required: false
          type: integer
          format: int32
        - name: fieldError.arguments
          in: query
          required: false
          type: array
          items:
            type: object
          collectionFormat: multi
        - name: fieldError.bindingFailure
          in: query
          required: false
          type: boolean
        - name: fieldError.code
          in: query
          required: false
          type: string
        - name: fieldError.codes
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: fieldError.defaultMessage
          in: query
          required: false
          type: string
        - name: fieldError.field
          in: query
          required: false
          type: string
        - name: fieldError.objectName
          in: query
          required: false
          type: string
        - name: fieldError.rejectedValue
          in: query
          required: false
          type: object
        - name: fieldErrorCount
          in: query
          required: false
          type: integer
          format: int32
        - name: 'fieldErrors[0].arguments'
          in: query
          required: false
          type: array
          items:
            type: object
          collectionFormat: multi
        - name: 'fieldErrors[0].bindingFailure'
          in: query
          required: false
          type: boolean
        - name: 'fieldErrors[0].code'
          in: query
          required: false
          type: string
        - name: 'fieldErrors[0].codes'
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: 'fieldErrors[0].defaultMessage'
          in: query
          required: false
          type: string
        - name: 'fieldErrors[0].field'
          in: query
          required: false
          type: string
        - name: 'fieldErrors[0].objectName'
          in: query
          required: false
          type: string
        - name: 'fieldErrors[0].rejectedValue'
          in: query
          required: false
          type: object
        - name: globalError.arguments
          in: query
          required: false
          type: array
          items:
            type: object
          collectionFormat: multi
        - name: globalError.code
          in: query
          required: false
          type: string
        - name: globalError.codes
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: globalError.defaultMessage
          in: query
          required: false
          type: string
        - name: globalError.objectName
          in: query
          required: false
          type: string
        - name: globalErrorCount
          in: query
          required: false
          type: integer
          format: int32
        - name: 'globalErrors[0].arguments'
          in: query
          required: false
          type: array
          items:
            type: object
          collectionFormat: multi
        - name: 'globalErrors[0].code'
          in: query
          required: false
          type: string
        - name: 'globalErrors[0].codes'
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: 'globalErrors[0].defaultMessage'
          in: query
          required: false
          type: string
        - name: 'globalErrors[0].objectName'
          in: query
          required: false
          type: string
        - name: nestedPath
          in: query
          required: false
          type: string
        - name: objectName
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseData«Categories»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - categories-controller
      summary: update
      operationId: updateUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: 'allErrors[0].arguments'
          in: query
          required: false
          type: array
          items:
            type: object
          collectionFormat: multi
        - name: 'allErrors[0].code'
          in: query
          required: false
          type: string
        - name: 'allErrors[0].codes'
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: 'allErrors[0].defaultMessage'
          in: query
          required: false
          type: string
        - name: 'allErrors[0].objectName'
          in: query
          required: false
          type: string
        - in: body
          name: categories
          description: categories
          required: true
          schema:
            $ref: '#/definitions/Categories'
        - name: errorCount
          in: query
          required: false
          type: integer
          format: int32
        - name: fieldError.arguments
          in: query
          required: false
          type: array
          items:
            type: object
          collectionFormat: multi
        - name: fieldError.bindingFailure
          in: query
          required: false
          type: boolean
        - name: fieldError.code
          in: query
          required: false
          type: string
        - name: fieldError.codes
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: fieldError.defaultMessage
          in: query
          required: false
          type: string
        - name: fieldError.field
          in: query
          required: false
          type: string
        - name: fieldError.objectName
          in: query
          required: false
          type: string
        - name: fieldError.rejectedValue
          in: query
          required: false
          type: object
        - name: fieldErrorCount
          in: query
          required: false
          type: integer
          format: int32
        - name: 'fieldErrors[0].arguments'
          in: query
          required: false
          type: array
          items:
            type: object
          collectionFormat: multi
        - name: 'fieldErrors[0].bindingFailure'
          in: query
          required: false
          type: boolean
        - name: 'fieldErrors[0].code'
          in: query
          required: false
          type: string
        - name: 'fieldErrors[0].codes'
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: 'fieldErrors[0].defaultMessage'
          in: query
          required: false
          type: string
        - name: 'fieldErrors[0].field'
          in: query
          required: false
          type: string
        - name: 'fieldErrors[0].objectName'
          in: query
          required: false
          type: string
        - name: 'fieldErrors[0].rejectedValue'
          in: query
          required: false
          type: object
        - name: globalError.arguments
          in: query
          required: false
          type: array
          items:
            type: object
          collectionFormat: multi
        - name: globalError.code
          in: query
          required: false
          type: string
        - name: globalError.codes
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: globalError.defaultMessage
          in: query
          required: false
          type: string
        - name: globalError.objectName
          in: query
          required: false
          type: string
        - name: globalErrorCount
          in: query
          required: false
          type: integer
          format: int32
        - name: 'globalErrors[0].arguments'
          in: query
          required: false
          type: array
          items:
            type: object
          collectionFormat: multi
        - name: 'globalErrors[0].code'
          in: query
          required: false
          type: string
        - name: 'globalErrors[0].codes'
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: 'globalErrors[0].defaultMessage'
          in: query
          required: false
          type: string
        - name: 'globalErrors[0].objectName'
          in: query
          required: false
          type: string
        - name: nestedPath
          in: query
          required: false
          type: string
        - name: objectName
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseData«Categories»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/categories/{id}':
    get:
      tags:
        - categories-controller
      summary: getById
      operationId: getByIdUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseData«Categories»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/places:
    get:
      tags:
        - place-controller
      summary: getAll
      operationId: getAllUsingGET_2
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Iterable«Place»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - place-controller
      summary: addData
      operationId: addDataUsingPOST_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: 'allErrors[0].arguments'
          in: query
          required: false
          type: array
          items:
            type: object
          collectionFormat: multi
        - name: 'allErrors[0].code'
          in: query
          required: false
          type: string
        - name: 'allErrors[0].codes'
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: 'allErrors[0].defaultMessage'
          in: query
          required: false
          type: string
        - name: 'allErrors[0].objectName'
          in: query
          required: false
          type: string
        - name: errorCount
          in: query
          required: false
          type: integer
          format: int32
        - name: fieldError.arguments
          in: query
          required: false
          type: array
          items:
            type: object
          collectionFormat: multi
        - name: fieldError.bindingFailure
          in: query
          required: false
          type: boolean
        - name: fieldError.code
          in: query
          required: false
          type: string
        - name: fieldError.codes
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: fieldError.defaultMessage
          in: query
          required: false
          type: string
        - name: fieldError.field
          in: query
          required: false
          type: string
        - name: fieldError.objectName
          in: query
          required: false
          type: string
        - name: fieldError.rejectedValue
          in: query
          required: false
          type: object
        - name: fieldErrorCount
          in: query
          required: false
          type: integer
          format: int32
        - name: 'fieldErrors[0].arguments'
          in: query
          required: false
          type: array
          items:
            type: object
          collectionFormat: multi
        - name: 'fieldErrors[0].bindingFailure'
          in: query
          required: false
          type: boolean
        - name: 'fieldErrors[0].code'
          in: query
          required: false
          type: string
        - name: 'fieldErrors[0].codes'
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: 'fieldErrors[0].defaultMessage'
          in: query
          required: false
          type: string
        - name: 'fieldErrors[0].field'
          in: query
          required: false
          type: string
        - name: 'fieldErrors[0].objectName'
          in: query
          required: false
          type: string
        - name: 'fieldErrors[0].rejectedValue'
          in: query
          required: false
          type: object
        - name: globalError.arguments
          in: query
          required: false
          type: array
          items:
            type: object
          collectionFormat: multi
        - name: globalError.code
          in: query
          required: false
          type: string
        - name: globalError.codes
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: globalError.defaultMessage
          in: query
          required: false
          type: string
        - name: globalError.objectName
          in: query
          required: false
          type: string
        - name: globalErrorCount
          in: query
          required: false
          type: integer
          format: int32
        - name: 'globalErrors[0].arguments'
          in: query
          required: false
          type: array
          items:
            type: object
          collectionFormat: multi
        - name: 'globalErrors[0].code'
          in: query
          required: false
          type: string
        - name: 'globalErrors[0].codes'
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: 'globalErrors[0].defaultMessage'
          in: query
          required: false
          type: string
        - name: 'globalErrors[0].objectName'
          in: query
          required: false
          type: string
        - name: nestedPath
          in: query
          required: false
          type: string
        - name: objectName
          in: query
          required: false
          type: string
        - in: body
          name: place
          description: place
          required: true
          schema:
            $ref: '#/definitions/Place'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseData«Place»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - place-controller
      summary: updateData
      operationId: updateDataUsingPUT_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: 'allErrors[0].arguments'
          in: query
          required: false
          type: array
          items:
            type: object
          collectionFormat: multi
        - name: 'allErrors[0].code'
          in: query
          required: false
          type: string
        - name: 'allErrors[0].codes'
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: 'allErrors[0].defaultMessage'
          in: query
          required: false
          type: string
        - name: 'allErrors[0].objectName'
          in: query
          required: false
          type: string
        - name: errorCount
          in: query
          required: false
          type: integer
          format: int32
        - name: fieldError.arguments
          in: query
          required: false
          type: array
          items:
            type: object
          collectionFormat: multi
        - name: fieldError.bindingFailure
          in: query
          required: false
          type: boolean
        - name: fieldError.code
          in: query
          required: false
          type: string
        - name: fieldError.codes
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: fieldError.defaultMessage
          in: query
          required: false
          type: string
        - name: fieldError.field
          in: query
          required: false
          type: string
        - name: fieldError.objectName
          in: query
          required: false
          type: string
        - name: fieldError.rejectedValue
          in: query
          required: false
          type: object
        - name: fieldErrorCount
          in: query
          required: false
          type: integer
          format: int32
        - name: 'fieldErrors[0].arguments'
          in: query
          required: false
          type: array
          items:
            type: object
          collectionFormat: multi
        - name: 'fieldErrors[0].bindingFailure'
          in: query
          required: false
          type: boolean
        - name: 'fieldErrors[0].code'
          in: query
          required: false
          type: string
        - name: 'fieldErrors[0].codes'
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: 'fieldErrors[0].defaultMessage'
          in: query
          required: false
          type: string
        - name: 'fieldErrors[0].field'
          in: query
          required: false
          type: string
        - name: 'fieldErrors[0].objectName'
          in: query
          required: false
          type: string
        - name: 'fieldErrors[0].rejectedValue'
          in: query
          required: false
          type: object
        - name: globalError.arguments
          in: query
          required: false
          type: array
          items:
            type: object
          collectionFormat: multi
        - name: globalError.code
          in: query
          required: false
          type: string
        - name: globalError.codes
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: globalError.defaultMessage
          in: query
          required: false
          type: string
        - name: globalError.objectName
          in: query
          required: false
          type: string
        - name: globalErrorCount
          in: query
          required: false
          type: integer
          format: int32
        - name: 'globalErrors[0].arguments'
          in: query
          required: false
          type: array
          items:
            type: object
          collectionFormat: multi
        - name: 'globalErrors[0].code'
          in: query
          required: false
          type: string
        - name: 'globalErrors[0].codes'
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: 'globalErrors[0].defaultMessage'
          in: query
          required: false
          type: string
        - name: 'globalErrors[0].objectName'
          in: query
          required: false
          type: string
        - in: body
          name: hotel
          description: hotel
          required: true
          schema:
            $ref: '#/definitions/Place'
        - name: nestedPath
          in: query
          required: false
          type: string
        - name: objectName
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseData«Place»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/places/search/name:
    post:
      tags:
        - place-controller
      summary: findByName
      operationId: findByNameUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: searchKeyDTO
          description: searchKeyDTO
          required: true
          schema:
            $ref: '#/definitions/SearchKeyDTO'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Place'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/places/search/{categoryName}':
    get:
      tags:
        - place-controller
      summary: findByCategory
      operationId: findByCategoryUsingGET
      produces:
        - '*/*'
      parameters:
        - name: categoryName
          in: path
          description: categoryName
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Place'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/places/{id}':
    get:
      tags:
        - place-controller
      summary: getOne
      operationId: getOneUsingGET_1
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Place'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - place-controller
      summary: delete
      operationId: deleteUsingDELETE_1
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/welcome:
    get:
      tags:
        - welcome
      summary: welcome
      operationId: welcomeUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
definitions:
  AboutEntitt:
    type: object
    properties:
      desc:
        type: string
      id:
        type: integer
        format: int64
      name:
        type: string
      photo:
        type: string
    title: AboutEntitt
  Categories:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    title: Categories
  Iterable«AboutEntitt»:
    type: object
    title: Iterable«AboutEntitt»
  Iterable«Categories»:
    type: object
    title: Iterable«Categories»
  Iterable«Place»:
    type: object
    title: Iterable«Place»
  Place:
    type: object
    required:
      - lattitude
      - longitude
    properties:
      category:
        $ref: '#/definitions/Categories'
      description:
        type: string
      id:
        type: integer
        format: int64
      lattitude:
        type: number
        format: double
      longitude:
        type: number
        format: double
      name:
        type: string
      photo:
        type: string
    title: Place
  ResponseData«AboutEntitt»:
    type: object
    properties:
      message:
        type: array
        items:
          type: string
      payload:
        $ref: '#/definitions/AboutEntitt'
      status:
        type: boolean
    title: ResponseData«AboutEntitt»
  ResponseData«Categories»:
    type: object
    properties:
      message:
        type: array
        items:
          type: string
      payload:
        $ref: '#/definitions/Categories'
      status:
        type: boolean
    title: ResponseData«Categories»
  ResponseData«Iterable«Categories»»:
    type: object
    properties:
      message:
        type: array
        items:
          type: string
      payload:
        $ref: '#/definitions/Iterable«Categories»'
      status:
        type: boolean
    title: ResponseData«Iterable«Categories»»
  ResponseData«Place»:
    type: object
    properties:
      message:
        type: array
        items:
          type: string
      payload:
        $ref: '#/definitions/Place'
      status:
        type: boolean
    title: ResponseData«Place»
  SearchKeyDTO:
    type: object
    properties:
      keyword:
        type: string
    title: SearchKeyDTO
